{namespace plugin.page.stashbot}

/**
 * @param error
 * @param repository
 * @param ciEnabled
 * @param publishBranchRegex
 * @param publishBuildCommand
 * @param isPublishPinned
 * @param publishLabel
 * @param verifyBranchRegex
 * @param verifyBuildCommand
 * @param isVerifyPinned
 * @param verifyLabel
 * @param prebuildCommand
 * @param jenkinsServerName
 * @param jenkinsServersData
 * @param isJunit
 * @param junitPath
 * @param artifactsEnabled
 * @param artifactsPath
 * @param maxVerifyChain
 * @param rebuildOnUpdate
 * @param emailRecipients
 * @param isEmailForEveryUnstableBuild
 * @param isEmailNotificationsEnabled
 * @param isEmailPerModuleEmail
 * @param isEmailSendToIndividuals
 * @param isStrictVerifyMode
 * @param isLocked
 * @param isPreserveJenkinsJobConfig
 * @param verificationEnabled
 * @param verifyPREnabled
 * @param publishEnabled
 * @param buildTimeout
 * @param buildTimeoutMin
 * @param buildTimeoutMax
 *
 **/
{template .repositoryConfigurationPanel}
<html>
<head>
    <meta name="decorator" content="stash.repository.settings">
    <meta name="projectKey" content="{$repository.project.key}">
    <meta name="repositorySlug" content="{$repository.slug}">
    <meta name="activeTab" content="repository-settings-git-ops-panel">
    <title>{{stash_i18n('stash.web.repository.git-ops.title', 'Stashbot settings')}}</title>
</head>
<body>
{call aui.group.group}
    {param content}
        {call aui.group.item}
            {param content}
                <h2>{stash_i18n('stash.web.repository.stashbot.heading', 'Stashbot Settings')}</h2>
            {/param}
        {/call}
    {/param}
{/call}
{if $error}
    {call widget.aui.message.error}
        {param title: 'An error occured in saving config.' /}
        {param content}
            {$error}
        {/param}
    {/call}
{/if}
{call aui.form.form}
    {param action: '' /}
    {param content}

        {call aui.group.group}
            {param content}
                {call aui.form.checkboxField}
                    {param legendContent: stash_i18n('stash.web.stash.enable-ci-radio.button.description', 'Stashbot') /}
                    {param fields: [[
                      'id': 'ciEnabled',
                      'labelText': stash_i18n('stash.web.stash.enable-ci-radio.button.label', 'Enabled'),
                      'isChecked': $ciEnabled
                      ]] /}
                {/call}
            {/param}
        {/call} /* Top group end */

        <h3>Publishing</h3>
        {call aui.group.group}
            {param content}
                {call aui.form.checkboxField}
                    {param legendContent: stash_i18n('stash.web.stash.enable-publish.button.description', 'Publishes') /}
                    {param fields: [[
                      'id': 'publishEnabled',
                      'labelText': stash_i18n('stash.web.stash.enable-verification.button.label', 'Enabled'),
                      'isChecked': $publishEnabled
                      ]] /}
                {/call}
                {call aui.form.textField}
                    {param id: 'publishBranchRegex' /}
                    {param labelContent: stash_i18n('stash.web.stash.publishBranchRegex.label', 'Trigger Regex') /}
                    {param value: $publishBranchRegex /}
                    {param fieldWidth: 'long' /}
                    {param descriptionText: stash_i18n('stash.web.stash.publishBranchRegex.description', 'Branches that match this regex will have a publish build run on Jenkins. Be aware that this is the full git ref - e.g. "refs/heads/master" or "refs/heads/.*", not just "master".') /}
                    {param extraAttributes: 'data-aui-notification-field data-aui-notification-info="Branches that match this regex will have a publish build run on Jenkins. Be aware that this is the full git ref - e.g. "refs/heads/master" or "refs/heads/.*", not just "master"."' /}
                {/call}
                {call aui.form.textField}
                    {param id: 'publishBuildCommand' /}
                    {param labelContent: stash_i18n('stash.web.stash.publishBuildCommand.label', 'Command') /}
                    {param descriptionText: stash_i18n('stash.web.stash.publishBuildCommand.description', 'The command that will be run during a publish build.  For example: ./scripts/publish.sh') /}
                    {param value: $publishBuildCommand /}
                    {param fieldWidth: 'long' /}
                {/call}
                {call aui.expander.trigger}
                    {param id: 'advanced-expand-publish'/}
                    {param contentId: 'advanced-expand-publish-content'/}
                    {param tag: 'a'/}
                    {param content: 'Advanced Publishing'/}
                    {param replaceText: 'Hide Advanced'/}
                {/call}
                {call aui.expander.content}
                    {param id: 'advanced-expand-publish-content'/}
                    {param content}
                        {call aui.form.checkboxField}
                            {param legendContent: stash_i18n('stash.web.stash.publish-pinned-checkbox.button.description', 'Restrict Jenkins Nodes') /}
                            {param fields: [[
                              'id': 'isPublishPinned',
                              'labelText': stash_i18n('stash.web.stash.enable-ci-radio.button.label', 'Enabled'),
                              'isChecked': $isPublishPinned
                              ]] /}
                        {/call}
                        {call aui.form.textField}
                            {param id: 'publishLabel' /}
                            {param labelContent: stash_i18n('stash.web.stash.verifyLabel.label', 'Jenkins Node Label') /}
                            {param value: $publishLabel /}
                            {param descriptionText: stash_i18n('stash.web.stash.verifyBranchRegex.description', 'Jenkins node label to restrict publish builds to') /}
                        {/call}
                    {/param}
                {/call}
          {/param}
        {/call} /* Publishing group End */


        <h3>Verifications</h3>
        {call aui.group.group}
            {param content}
                {call aui.form.checkboxField}
                    {param legendContent: stash_i18n('stash.web.stash.enable-verification.button.description', 'Commit Verifies') /}
                    {param fields: [[
                      'id': 'verificationEnabled',
                      'labelText': stash_i18n('stash.web.stash.enable-verification.button.label', 'Enabled'),
                      'isChecked': $verificationEnabled
                      ]] /}
                {/call}
                {call aui.form.checkboxField}
                    {param legendContent: stash_i18n('stash.web.stash.enable-verify-pr.button.description', 'PR Verifies') /}
                    {param fields: [[
                      'id': 'verifyPREnabled',
                      'labelText': stash_i18n('stash.web.stash.enable-verify-pr.button.label', 'Enabled'),
                      'isChecked': $verifyPREnabled
                      ]] /}
                {/call}
                {call aui.form.textField}
                    {param id: 'verifyBranchRegex' /}
                    {param labelContent: stash_i18n('stash.web.stash.verifyBranchRegex.label', 'Trigger Regex') /}
                    {param value: $verifyBranchRegex /}
                    {param fieldWidth: 'long' /}
                    {param descriptionText: stash_i18n('stash.web.stash.verifyBranchRegex.description', 'Branches that match this regex will have a verify build run on Jenkins. Be aware that this is the full git ref - e.g. "refs/heads/master" or "refs/heads/.*", not just "master".') /}
                {/call}
                {call aui.form.textField}
                    {param id: 'verifyBuildCommand' /}
                    {param labelContent: stash_i18n('stash.web.stash.verifyBuildCommand.label', 'Command') /}
                    {param descriptionText: stash_i18n('stash.web.stash.verifyBuildCommand.description', 'The command that will be run during a verification or verify_pr build.  For example: ./scripts/verify.sh') /}
                    {param value: $verifyBuildCommand /}
                    {param fieldWidth: 'long' /}
                {/call}
                {call aui.expander.trigger}
                    {param id: 'advanced-expand-verify'/}
                    {param contentId: 'advanced-expand-verify-content'/}
                    {param tag: 'a'/}
                    {param content: 'Advanced Verification'/}
                    {param replaceText: 'Hide Advanced'/}
                {/call}
                {call aui.expander.content}
                    {param id: 'advanced-expand-verify-content'/}
                    {param content}
                        {call aui.form.checkboxField}
                            {param legendContent: stash_i18n('stash.web.stash.verify-pinned-checkbox.button.description', 'Restrict Jenkins Nodes') /}
                            {param fields: [[
                              'id': 'isVerifyPinned',
                              'labelText': stash_i18n('stash.web.stash.enable-ci-radio.button.label', 'Enabled'),
                              'isChecked': $isVerifyPinned
                              ]] /}
                        {/call}
                        {call aui.form.textField}
                            {param id: 'verifyLabel' /}
                            {param labelContent: stash_i18n('stash.web.stash.verifyLabel.label', 'Jenkins Node Label') /}
                            {param value: $verifyLabel /}
                            {param descriptionText: stash_i18n('stash.web.stash.verifyBranchRegex.description', 'Jenkins node label to restrict publish builds to') /}
                        {/call}
                        {call aui.form.textField}
                            {param id: 'maxVerifyChain' /}
                            {param labelContent: stash_i18n('stash.web.stash.maxVerifyChain.label', 'Maximum number of commits to verify on a single push') /}
                            {param value: $maxVerifyChain /}
                        {/call}
                        {call aui.form.checkboxField}
                            {param legendContent: stash_i18n('stash.web.stash.rebuild-on-update-radio.button.description', 'Rebuild PR on target change') /}
                            {param fields: [[
                              'id': 'rebuildOnUpdate',
                              'labelText': stash_i18n('stash.web.stash.enable-ci-radio.button.label', 'Enabled'),
                              'isChecked': $rebuildOnUpdate
                              ]] /}
                        {/call}
                        {call aui.form.checkboxField}
                            {param legendContent: stash_i18n('stash.web.stash.strict-verify-mode.button.description', 'Strict Verify Mode') /}
                            {param fields: [[
                              'id': 'isStrictVerifyMode',
                              'labelText': stash_i18n('stash.web.stash.strict-verify-mode.button.label', 'Enabled'),
                              'isChecked': $isStrictVerifyMode
                              ]] /}
                        {/call}
                    {/param}
                {/call} /* Expanded Group End */
            {/param}
        {/call} /* Verification Group End */

        <h3>Artifacts</h3>
        {call aui.group.group}
            {param content}

            {call aui.group.item}
                {param content}
                    {call aui.form.checkboxField}
                        {param legendContent: stash_i18n('stash.web.stash.junit-enabled.button.description', 'Junit Test Results') /}
                        {param fields: [[
                          'id': 'isJunit',
                          'labelText': stash_i18n('stash.web.stash.enable-ci-radio.button.label', 'Enabled'),
                          'isChecked': $isJunit
                          ]] /}
                    {/call}
                    {call aui.form.textField}
                        {param id: 'junitPath' /}
                        {param labelContent: stash_i18n('stash.web.stash.junitPath.label', 'Result Location') /}
                        {param value: $junitPath /}
                        {param descriptionContent}
                          Location of JUnit xml files after a build completes.  This is an <a target=_blank href="http://ant.apache.org/manual/dirtasks.html#patterns">ant-style glob</a>.
                          For example, Gradle by default will put results at **/build/test-results/TEST-*.xml.  If no xml files are found, the build will fail.  This applies
                          to verify and publish builds.
                        {/param}
                    {/call}
                {/param}
            {/call} /* JUnit Item End */

            {call aui.group.item}
                {param content}
                    {call aui.form.checkboxField}
                        {param legendContent: stash_i18n('stash.web.stash.artifacts-enabled.button.description', 'Save Artifacts') /}
                        {param fields: [[
                          'id': 'artifactsEnabled',
                          'labelText': stash_i18n('stash.web.stash.enable-ci-radio.button.label', 'Enabled'),
                          'isChecked': $artifactsEnabled
                          ]] /}
                    {/call}
                    {call aui.form.textField}
                        {param id: 'artifactsPath' /}
                        {param labelContent: stash_i18n('stash.web.stash.artifactsPath.label', 'Artifact Pattern') /}
                        {param value: $artifactsPath /}
                        {param descriptionContent}
                          Comma-delimited <a target=_blank href="http://ant.apache.org/manual/dirtasks.html#patterns">ant-style globs </a> you wish
                          Jenkins to save after a build (of any type) completes.  This is useful for picking up logs, coverage reports, etc.
                        {/param}
                    {/call}
                {/param}
            {/call} /* Artifacting Item End */
          {/param}
        {/call}


        <h3>Advanced</h3>
        {call aui.expander.trigger}
            {param id: 'advanced-expand-jenkins'/}
            {param contentId: 'advanced-expand-jenkins-content'/}
            {param tag: 'a'/}
            {param content: 'Show Advanced'/}
            {param replaceText: 'Hide Advanced'/}
        {/call}
        {call aui.expander.content}
            {param id: 'advanced-expand-jenkins-content'/}
            {param content}

                {call aui.group.group}
                    {param content}
                        {call aui.group.item}
                          {param content}
                              {call aui.form.selectField}
                                {param id: 'jenkinsServerName' /}
                                {param labelContent: stash_i18n('stash.web.stash.jenkinsServerName.label', 'Jenkins Server') /}
                                {param options: $jenkinsServersData /}
                                {param value: $jenkinsServerName /}
                              {/call}
                          {/param}
                        {/call}

                        {call aui.group.item}
                            {param content}
                                {call aui.form.textField}
                                    {param id: 'buildTimeout' /}
                                    {param labelContent: stash_i18n('stash.web.stash.buildTimeout.label', 'Build Timeout (minutes)') /}
                                    {param descriptionText: stash_i18n('stash.web.stash.buildTimeout.description', 'Timeout (in minutes) for all builds.  A value of -1 uses Jenkins-wide default.  Minimum value of ' + $buildTimeoutMin + ' and maximum value of ' + $buildTimeoutMax + '.') /}
                                    {param value: $buildTimeout /}
                                    {param fieldWidth: 'short' /}
                                {/call}
                            {/param}
                        {/call}
                    {/param}
                {/call} /* Group End */

                {call aui.group.group}
                  {param content}
                  <h4>&nbsp;</h4>
                  {/param}
                {/call}

                {call aui.group.group}
                    {param content}

                        {call aui.group.item}
                            {param content}
                                {call aui.form.textField}
                                    {param id: 'prebuildCommand' /}
                                    {param descriptionText: stash_i18n('stash.web.stash.prebuildCommand.description', 'Command to run before all builds (and for PR verifies, before the merge)') /}
                                    {param labelContent: stash_i18n('stash.web.stash.prebuildCommand.label', 'Pre Build Command') /}
                                    {param value: $prebuildCommand /}
                                {/call}
                            {/param}
                        {/call}

                        {call aui.group.item}
                            {param content}
                                {call aui.form.checkboxField}
                                    {param legendContent: stash_i18n('stash.web.stash.preserveJenkinsJobConfig.label', 'Preserve Jenkins Job Config') /}
                                    {param descriptionText: stash_i18n('stash.web.stash.preserveJenkinsJobConfig.description', 'Enabling this option stops Stashbot from setting any command, artifact, testing, etc. options for your build.') /}
                                    {param fields: [[
                                      'id': 'isPreserveJenkinsJobConfig',
                                      'labelText': stash_i18n('stash.web.stash.preserveJenkinsJobConfig.button.label', 'Enabled'),
                                      'isChecked': $isPreserveJenkinsJobConfig
                                    ]] /}
                                {/call}
                            {/param}
                        {/call}
                    {/param}
                {/call} /* Group End */

                {call aui.group.group}
                    {param content}
                    <h4>&nbsp;</h4>
                    {/param}
                {/call}

                {call aui.group.group}
                    {param content}
                        {call aui.form.checkboxField}
                            {param legendContent: stash_i18n('stash.web.stash.email-enabled.button.description', 'E-mail notifications') /}
                            {param fields: [[
                              'id': 'isEmailNotificationsEnabled',
                              'labelText': stash_i18n('stash.web.stash.enable-ci-radio.button.label', 'Enabled'),
                              'isChecked': $isEmailNotificationsEnabled
                              ]] /}
                        {/call}
                        {call aui.form.textField}
                            {param id: 'emailRecipients' /}
                            {param labelContent: stash_i18n('stash.web.stash.emailRecipients.label', 'E-mail Recipients') /}
                            {param value: $emailRecipients /}
                        {/call}
                        {call aui.form.checkboxField}
                            {param legendContent: stash_i18n('stash.web.stash.emailForEveryUnstableBuild.button.description', 'E-mail Options') /}
                            {param fields: [[
                              'id': 'isEmailForEveryUnstableBuild',
                              'labelText': stash_i18n('stash.web.stash.enable-ci-radio.button.label', 'Send e-mail for every unstable build'),
                              'isChecked': $isEmailForEveryUnstableBuild
                              ]] /}
                        {/call}
                        {call aui.form.checkboxField}
                            {param legendContent: stash_i18n('stash.web.stash.emailSendToIndividuals.button.description', '') /}
                            {param fields: [[
                              'id': 'isEmailSendToIndividuals',
                              'labelText': stash_i18n('stash.web.stash.enable-ci-radio.button.label', 'Send separate e-mails to individuals who broke the build'),
                              'isChecked': $isEmailSendToIndividuals
                              ]] /}
                        {/call}
                        {call aui.form.checkboxField}
                            {param legendContent: stash_i18n('stash.web.stash.emailPerModuleEmail.button.description', '') /}
                            {param fields: [[
                              'id': 'isEmailPerModuleEmail',
                              'labelText': stash_i18n('stash.web.stash.enable-ci-radio.button.label', 'Send e-mail for each failed module'),
                              'isChecked': $isEmailPerModuleEmail
                              ]] /}
                        {/call}
                    {/param}
                {/call} /* Group End */
            {/param}
        {/call}


        <h3>&nbsp;</h3>
        {call aui.form.buttons}
          {param content}
           {call aui.form.submit}
              {param id: 'submit' /}
              {param text: stash_i18n('stash.web.stash.ci-prefs.submit', 'Save') /}
              {param type: 'submit' /}
            {/call}
          {/param}
        {/call}

    {/param}
{/call}

<p style="text-align:right;">
    {call aui.expander.trigger}
        {param id: 'advanced-expand-documentation'/}
        {param contentId: 'advanced-expand-documentation-content'/}
        {param tag: 'a'/}
        {param content: 'Show Documentation'/}
        {param replaceText: 'Hide Documentation'/}
    {/call}
</p>
{call aui.expander.content}
    {param id: 'advanced-expand-documentation-content'/}
    {param content}
        <div>
            <div>
                <h3>Build/Job Types</h3>
                <ul>
                    <li>
                        Verify
                        <ul>
                            <li><tt>verification</tt> &ndash; Each commit in a PR gets verified by its own run of the verification job</li>
                            <li><tt>verify_pr</tt> &ndash; The PR gets tested in verify_pr.  The difference between this and verification is
                                that the PR gets merged into the target branch.
                            </li>
                        </ul>
                    </li>
                    <li>
                        Publish
                        <ul>
                            <li><tt>publish</tt> &ndash; The publish build is useful for publishing artifacts, releases, etc.  It is expected
                                that the command you run for a publish will take care of the actual publishing of artifacts.  In case you push
                                a commit to a branch that matches both the verify and publish regular expressions, the publish job will take
                                prescendence over the verification build.  The commit will not be verified.
                            </li>
                        </ul>
                    </li>
                </ul>
            </div>
            <div>&nbsp;</div>
            <div>
                <h3>Branch Regular Expressions</h3>
                The branch regex specify when a verification/verify_pr build will start and when a publish build will start.  It requires
                a full git reference and uses <a href="https://docs.oracle.com/javase/tutorial/essential/regex/" target=_blank>Java</a> for matching regexes.
                <h4>Examples</h4>
                <dl>
                    <dt>refs/heads/master</dt>
                    <dd>Matches just the master branch.</dd>

                    <dt>refs/heads/.*</dt>
                    <dd>Matches all branches.</dd>

                    <dt>refs/heads/(master|develop)</dt>
                    <dd>Matches the master or develop branch</dd>

                    <dt>refs/(heads/master|tags/.*)</dt>
                    <dd>Matches the master branch and all tags</dd>
                </dl>
                <h4>Publish Examples</h4>
                    <dt>refs/heads/(master|develop)</dt>
                    <dd>Publish on any commit pushed or PR merged into <tt>master</tt> or <tt>develop</tt> branch.</dd>

                    <dt>refs/(heads/master|tags/.*)</dt>
                    <dd>Any commit pushed or PR merged into <tt>master</tt> will cause a publish job to start.  In addition,
                    a tag can be pushed independently and it will also start a publish job.  This allows you to publish master
                    almost like a testable snapshot, and when you're happy, you can push a tag separately and actually create
                    a release.</dd>

                    <dt>refs/heads/(master|release/.*)</dt>
                    <dd>Publish commits/PRs to <tt>master</tt> or any branch starting with <tt>release/</tt> such as <tt>release/2.4.0</tt>
                <dl>
                </dl>
            </div>
            <div>&nbsp;</div>
            <div>
                <h3>Advanced</h3>

                <h4>Build Pinning</h4>
                If your jenkins instance has applied labels to build nodes, you can have verifiy or publish builds pinned to a specific build
                node label by checking these checkboxes, and entering the desired label.

                <h4>Build Timeouts</h4>
                All Jenkins jobs created by Stashbot have a timeout set on them.  By default, the jobs use the default timeout set by the admin
                of Stash.  If you’d like a different value, you can override it at the repository level.  A value of -1 uses the Jenkins-wide
                default.  The allowable range is from 5 minutes to 1 week (10080 minutes).

                <h4>Max Verify Chain</h4>
                The max verify chain setting specifies the number of verification builds to trigger due to a single ref update, at most. For
                example, if the setting is set to 5, and a reference is updated from pointing to commit A, to pointing to commit B, and commit B
                has commit A as it's parent's parent's parent's parent, that is a chain of five commits have been pushed each dependent on the next,
                then 5 verify builds will be triggered, one for each commit. If the setting was instead set to 3, only the 3 "most recent" commits
                would be verified, and 2 would be left unbuilt (but verifies could be triggered manually). If the setting was 0, an unlimited number
                of builds could be triggered (though still limited by the jenkins configuration setting as well, which puts a cap on it).

                <h4>Strict Verify Mode</h4>
                In strict mode, stashbot requires that every commit in a pull request has at least one successful build before it can be merged.
                This lets you enforce a higher level of verification so that git bisects are reliable. Another example where you might want to do
                this is if your build acts upon changed pieces only, and can therefore only guarantee consistency if each commit's parent has also
                been verified. Note that if your verify regex does not match a feature branch, but does match an integration branch, and you push
                to your feature branch then try to merge into your integration branch, there will be missing verify builds. Therefore, if you want
                stashbot to perform these builds and operate in strict mode, you probably want your verify regex to cover all branches to which you
                directly push. Strict mode is disabled by default, and when enabled <b>it cannot be overridden with the override flag due to
                implementation details (but users may still perform the merge locally and directly push it, if they have adequate permissions to do so).<b/>

                <h4>Preserve Jenkins Job Config</h4>
                When you click save, normally, the job is destroyed and recreated. This option disables that, so editing this page still changes internal
                state but no longer effects a job (that already exists) at all. Some features will work, some will not, but changes made directly in
                jenkins will no longer be destroyed.
            </div>
        </div>
    {/param}
{/call}

<p hidden="true" id="isJenkinsServerLocked">{$isLocked}</p>

</body>
</html>
{/template}

